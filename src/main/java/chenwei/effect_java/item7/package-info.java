/**
 * @author chenwei
 *
 */
package chenwei.effect_java.item7;
// 1 消除过期的对象引用
// 1.1 尽可能快地发现程序中的错误是有好处的。
// 1.2 清空对象引用应该是例外而不是规范。消除过期引用的最好方法是让包含引用的变量超出范围。
// 1.3 一般来说，当一个类自己管理内存时，程序员应该警惕内存泄漏问题。
// 1.4 另一个常见的内存泄漏来源是缓存。
// WeakHashMap java.lang.ref
// 1.5 第三个常见的内存泄漏来源是监听器和其他回调。
// 如果你实现了一个API，其客户端注册回调，但是没有显式地撤销注册回调，除非采取一些操作，否则它们将会累积。确保回调是垃圾收集的一种方法是只存储弱引用（weak
// references），例如，仅将它们保存在WeakHashMap的键（key）中。
// 1.6 通常仅在仔细的代码检查或借助堆分析器（ heap profiler）的调试工具才会被发现。